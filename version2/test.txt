[CAP1_R11_C1]+[CAP1_R12_C1]+[CAP1_R13_C1]+[CAP1_R14_C1]+[CAP1_R15_C1]+[CAP1_R16_C1]+[CAP1_R17_C1]+
[CAP1_R18_C1]+[CAP1_R19_C1]+[CAP1_R20_C1]+[CAP1_R21_C1]+[CAP1_R22_C1]+[CAP1_R23_C1]+[CAP1_R24_C1]+
[CAP1_R25_C1]+[CAP1_R26_C1]=[CAP1_R10_C1]msg(Error);
[CAP1_R11_C2]+[CAP1_R12_C2]+[CAP1_R13_C2]+[CAP1_R14_C2]+[CAP1_R15_C2]+[CAP1_R16_C2]+[CAP1_R17_C2]+
[CAP1_R18_C2]+[CAP1_R19_C2]+[CAP1_R20_C2]+[CAP1_R21_C2]+[CAP1_R22_C2]+[CAP1_R23_C2]+[CAP1_R24_C2]+
[CAP1_R25_C2]+[CAP1_R26_C2]=[CAP1_R10_C2]msg(Error);

[CAP1_R11_C4]+[CAP1_R12_C4]+[CAP1_R13_C4]+[CAP1_R14_C4]+[CAP1_R15_C4]+[CAP1_R16_C4]+[CAP1_R17_C4]+
[CAP1_R18_C4]+[CAP1_R19_C4]+[CAP1_R20_C4]+[CAP1_R21_C4]+[CAP1_R22_C4]+[CAP1_R23_C4]+[CAP1_R24_C4]+
[CAP1_R25_C4]+[CAP1_R26_C4]=[CAP1_R10_C4]msg(Error);
[CAP1_R11_C5]+[CAP1_R12_C5]+[CAP1_R13_C5]+[CAP1_R14_C5]+[CAP1_R15_C5]+[CAP1_R16_C5]+[CAP1_R17_C5]+
[CAP1_R18_C5]+[CAP1_R19_C5]+[CAP1_R20_C5]+[CAP1_R21_C5]+[CAP1_R22_C5]+[CAP1_R23_C5]+[CAP1_R24_C5]+
[CAP1_R25_C5]+[CAP1_R26_C5]=[CAP1_R10_C5]msg(Error);
[CAP1_R51_C1]+[CAP1_R52_C1]+[CAP1_R53_C1]+[CAP1_R54_C1]+[CAP1_R55_C1]+[CAP1_R56_C1]+[CAP1_R57_C1]+
[CAP1_R58_C1]+[CAP1_R59_C1]+[CAP1_R60_C1]+[CAP1_R61_C1]+[CAP1_R62_C1]+[CAP1_R63_C1]+[CAP1_R64_C1]+
[CAP1_R65_C1]=[CAP1_R50_C1]msg(Error);

[CAP1_R51_C2]+[CAP1_R52_C2]+[CAP1_R53_C2]+[CAP1_R54_C2]+[CAP1_R55_C2]+[CAP1_R56_C2]+[CAP1_R57_C2]+
[CAP1_R58_C2]+[CAP1_R59_C2]+[CAP1_R60_C2]+[CAP1_R61_C2]+[CAP1_R62_C2]+[CAP1_R63_C2]+[CAP1_R64_C2]+
[CAP1_R65_C2]=[CAP1_R50_C2]msg(Error);

[CAP1_R51_C4]+[CAP1_R52_C4]+[CAP1_R53_C4]+[CAP1_R54_C4]+[CAP1_R55_C4]+[CAP1_R56_C4]+[CAP1_R57_C4]+
[CAP1_R58_C4]+[CAP1_R59_C4]+[CAP1_R60_C4]+[CAP1_R61_C4]+[CAP1_R62_C4]+[CAP1_R63_C4]+[CAP1_R64_C4]+
[CAP1_R65_C4]=[CAP1_R50_C4]msg(Error);

[CAP1_R51_C5]+[CAP1_R52_C5]+[CAP1_R53_C5]+[CAP1_R54_C5]+[CAP1_R55_C5]+[CAP1_R56_C5]+[CAP1_R57_C5]+
[CAP1_R58_C5]+[CAP1_R59_C5]+[CAP1_R60_C5]+[CAP1_R61_C5]+[CAP1_R62_C5]+[CAP1_R63_C5]+[CAP1_R64_C5]+
[CAP1_R65_C5]=[CAP1_R50_C5]msg(Error);

[CAP1_R69_C1]+[CAP1_R68_C1]+
[CAP1_R67_C1]=[CAP1_R66_C1]msg(Error);

[CAP1_R69_C2]+[CAP1_R68_C2]+
[CAP1_R67_C2]=[CAP1_R66_C2]msg(Error);

[CAP1_R69_C4]+[CAP1_R68_C4]+
[CAP1_R67_C4]=[CAP1_R66_C4]msg(Error);

[CAP1_R69_C5]+[CAP1_R68_C5]+
[CAP1_R67_C5]=[CAP1_R66_C5]msg(Error);


[CAP1_R72_C1]+[CAP1_R71_C1]=[CAP1_R70_C1]msg(Error);
[CAP1_R72_C2]+[CAP1_R71_C2]=[CAP1_R70_C2]msg(Error);

[CAP1_R72_C4]+[CAP1_R71_C4]=[CAP1_R70_C4]msg(Error);
[CAP1_R72_C5]+[CAP1_R71_C5]=[CAP1_R70_C5]msg(Error);




[CAP1_R99_C1]+[CAP1_R94_C1]+[CAP1_R87_C1]=[CAP1_R86_C1]msg(Error);
[CAP1_R99_C2]+[CAP1_R94_C2]+[CAP1_R87_C2]=[CAP1_R86_C2]msg(Error);
[CAP1_R99_C4]+[CAP1_R94_C4]+[CAP1_R87_C4]=[CAP1_R86_C4]msg(Error);
[CAP1_R99_C5]+[CAP1_R94_C5]+[CAP1_R87_C5]=[CAP1_R86_C5]msg(Error);


[CAP1_R93_C1]+[CAP1_R92_C1]+[CAP1_R91_C1]+[CAP1_R90_C1]+[CAP1_R89_C1]+[CAP1_R88_C1]=[CAP1_R87_C1]msg(Error);
[CAP1_R93_C2]+[CAP1_R92_C2]+[CAP1_R91_C2]+[CAP1_R90_C2]+[CAP1_R89_C2]+[CAP1_R88_C2]=[CAP1_R87_C2]msg(Error);

[CAP1_R93_C4]+[CAP1_R92_C4]+[CAP1_R91_C4]+[CAP1_R90_C4]+[CAP1_R89_C4]+[CAP1_R88_C4]=[CAP1_R87_C4]msg(Error);
[CAP1_R93_C5]+[CAP1_R92_C5]+[CAP1_R91_C5]+[CAP1_R90_C5]+[CAP1_R89_C5]+[CAP1_R88_C5]=[CAP1_R87_C5]msg(Error);

[CAP1_R95_C1]+[CAP1_R96_C1]+[CAP1_R97_C1]+[CAP1_R98_C1]=[CAP1_R94_C1]msg(Error);
[CAP1_R95_C2]+[CAP1_R96_C2]+[CAP1_R97_C2]+[CAP1_R98_C2]=[CAP1_R94_C2]msg(Error);
[CAP1_R95_C4]+[CAP1_R96_C4]+[CAP1_R97_C4]+[CAP1_R98_C4]=[CAP1_R94_C4]msg(Error);
[CAP1_R95_C5]+[CAP1_R96_C5]+[CAP1_R97_C5]+[CAP1_R98_C5]=[CAP1_R94_C5]msg(Error);



[CAP1_R134_C1]+[CAP1_R133_C1]+[CAP1_R132_C1]=[CAP1_R99_C1]msg(Error);
[CAP1_R134_C2]+[CAP1_R133_C2]+[CAP1_R132_C2]=[CAP1_R99_C2]msg(Error);
[CAP1_R134_C4]+[CAP1_R133_C4]+[CAP1_R132_C4]=[CAP1_R99_C4]msg(Error);
[CAP1_R134_C5]+[CAP1_R133_C5]+[CAP1_R132_C5]=[CAP1_R99_C5]msg(Error);

[CAP1_R102_C1]+[CAP1_R101_C1]=[CAP1_R100_C1]msg(Error);
[CAP1_R102_C2]+[CAP1_R101_C2]=[CAP1_R100_C2]msg(Error);

[CAP1_R102_C5]+[CAP1_R101_C5]=[CAP1_R100_C5]msg(Error);
[CAP1_R102_C4]+[CAP1_R101_C4]=[CAP1_R100_C4]msg(Error);


[CAP1_R108_C1]+[CAP1_R107_C1]+[CAP1_R106_C1]+[CAP1_R105_C1]+[CAP1_R136_C1]+[CAP1_R104_C1]=[CAP1_R103_C1]msg(Error);
[CAP1_R108_C2]+[CAP1_R107_C2]+[CAP1_R106_C2]+[CAP1_R105_C2]+[CAP1_R136_C2]+[CAP1_R104_C2]=[CAP1_R103_C2]msg(Error);
[CAP1_R108_C4]+[CAP1_R107_C4]+[CAP1_R106_C4]+[CAP1_R105_C4]+[CAP1_R136_C4]+[CAP1_R104_C4]=[CAP1_R103_C4]msg(Error);
[CAP1_R108_C5]+[CAP1_R107_C5]+[CAP1_R106_C5]+[CAP1_R105_C5]+[CAP1_R136_C5]+[CAP1_R104_C5]=[CAP1_R103_C5]msg(Error);

[CAP2_R112_C1]+[CAP2_R113_C1]+[CAP2_R114_C1]+[CAP2_R115_C1]+[CAP2_R116_C1]=[CAP2_R111_C1]msg(Error);
[CAP2_R112_C2]+[CAP2_R113_C2]+[CAP2_R114_C2]+[CAP2_R115_C2]+[CAP2_R116_C2]=[CAP2_R111_C2]msg(Error);
[CAP2_R112_C4]+[CAP2_R113_C4]+[CAP2_R114_C4]+[CAP2_R115_C4]+[CAP2_R116_C4]=[CAP2_R111_C4]msg(Error);
[CAP2_R112_C5]+[CAP2_R113_C5]+[CAP2_R114_C5]+[CAP2_R115_C5]+[CAP2_R116_C5]=[CAP2_R111_C5]msg(Error);
[CAP2_R118_C1]+[CAP2_R119_C1]=[CAP2_R117_C1]msg(Error);
[CAP2_R118_C2]+[CAP2_R119_C2]=[CAP2_R117_C2]msg(Error);

[CAP2_R118_C4]+[CAP2_R119_C4]=[CAP2_R117_C4]msg(Error);
[CAP2_R118_C5]+[CAP2_R119_C5]=[CAP2_R117_C5]msg(Error);

[CAP2_R122_C1]+[CAP2_R121_C1]=[CAP2_R120_C1]msg(Error);
[CAP2_R122_C2]+[CAP2_R121_C2]=[CAP2_R120_C2]msg(Error);
[CAP2_R122_C4]+[CAP2_R121_C4]=[CAP2_R120_C4]msg(Error);
[CAP2_R122_C5]+[CAP2_R121_C5]=[CAP2_R120_C5]msg(Error);



In cap Capitol.I - PRODUSE VEGETALE a 3 si a 6 colona este cu 2 zecimale. 
Cap.II - Produse Animaliere  a 3 si a 6 colona este cu 2 zecimale. 



This is the expression that calculates the division of two numbers from two cells and displays that one in another in Drupal.

[CAP1_R10_C2]/[CAP1_R10_C1]=[CAP1_R10_C3]msg(Error);
[CAP1_R11_C2]/[CAP1_R11_C1]=[CAP1_R11_C3]msg(Error);

These parameters are used by the class  class="table number autofield float"
<input type="text" name="CAP1_R11_C3" id="CAP1_R11_C3" field="CAP1_R11_C3" class="table number autofield float" maxlength="15" decimal_length="2" value="1.00">

If CAP1_R10_C2 and CAP1_R10_C1 have data is also a result in CAP1_R10_C3. 
But if they are not saved, a crash occurs

How can I solve this bug without changing the table number autofield float class


Buna ziua. 
In sectiunea --Expresii pentru autocalculare -- am nevoie sa fac operatia de impartie. 
Este posibil ? 
Ca de exenplu. 

[CAP1_R10_C2]/[CAP1_R10_C1]=[CAP1_R10_C3]msg(Error);
[CAP1_R11_C2]/[CAP1_R11_C1]=[CAP1_R11_C3]msg(Error);

Totul merge bine cand sunt cifre dar cand nu sunt la salvare pagiba face crash

Am incercat sa utilizezi aceast experise in Expresii pentru autocalculare  

if ([CAP1_R10_C2] != 0 && [CAP1_R10_C1] != 0) {
[CAP1_R10_C2]/[CAP1_R10_C1]=[CAP1_R10_C3];
} else {
msg("Error: Cannot divide by zero");
}



in loc de 
[CAP1_R10_C2]/[CAP1_R10_C1]=[CAP1_R10_C3]msg(Error);


In general impartirea se poate face cu ajutorul -- Expresii pentru autocalculare 

Daca da care este sintaxa ? Multumesc. 


if ([CAP1_R10_C2] != 0 && [CAP1_R10_C1] != 0) {
[CAP1_R10_C2]/[CAP1_R10_C1]=[CAP1_R10_C3];
} else {
msg("Error: Cannot divide by zero");
}

if ([CAP1_R11_C2] != 0 && [CAP1_R11_C1] != 0) {
[CAP1_R11_C2]/[CAP1_R11_C1]=[CAP1_R11_C3];
} else {
msg("Error: Cannot divide by zero");
}


Cand adaug acesta calucle linga alte calcule 


if ([CAP1_R10_C2] != 0 && [CAP1_R10_C1] != 0) {
[CAP1_R10_C2]/[CAP1_R10_C1]=[CAP1_R10_C3];
} else {
msg("Error: Cannot divide by zero");
}

if ([CAP1_R11_C2] != 0 && [CAP1_R11_C1] != 0) {
[CAP1_R11_C2]/[CAP1_R11_C1]=[CAP1_R11_C3];
} else {
msg("Error: Cannot divide by zero");
}


ca de exemplu 

[CAP2_R118_C4]+[CAP2_R119_C4]=[CAP2_R117_C4]msg(Error);
[CAP2_R118_C5]+[CAP2_R119_C5]=[CAP2_R117_C5]msg(Error);

Nu lucreaza nici un aotufild

Expresii pentru autocalculare - 
Exemplu Raportul ASA 22 - Eu ma testat pe productie. 

In aceasta  functionalitate, de exemplu 
[CAP8_R820_C1]+[CAP8_R830_C1]=[CAP8_R810_C1]msg(Error);

1.Daca se copmpleteaza raportul online, nu apar erori. fiindca CAP8_R810_C1 este readonly, si CAP8_R810_C1 este autosuma a [CAP8_R820_C1]+[CAP8_R830_C1]

2. Daca raportul este importat din XML si in XML  CAP8_R810_C1] nu este egal cu  [CAP8_R820_C1]+[CAP8_R830_C1], din varii motive, 
raportul se importa si la verificare  apare avertizare ca nu este egala autosuma. Dar raportul se poate salva si trimite. Si el ajunge la BNS si de ja in CIS2  sau in CIS 
la verificarea raportului se depisteaza ca egalitatea nu este adevarata. 

3. Daca de exemplu [CAP8_R820_C1]+[CAP8_R830_C1]=[CAP8_R810_C1]msg(Error); este dublata  cu regula de validare in js atunci la salvare se depisteza inegalitatea si de regula de validare 
care este de culoare rosie - eroare - si raportul nu poate fi trimis pana cand nu satisface conditia regulei de validare. 

Acest bug poate sa apara la toate rapoartele daca (autocalcularea) nu este dublata cu regula de validare in js si in XML nu sunt datele corecte.    


In Expresii pentru autocalculare

acest clas face autocalularea class="table number autofield float"

dupa cum se vede. el trebuie modificat ca pentru operatia de impartire, daca se imparte la zero sa nu sa faca calculul. 


Trebuie ajustat algoritmul pentru operatia de impartire si gata in class="table number autofield float"
